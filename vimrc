" Payball's VIM configuration
"""""""""""""""""""""""""""""

" Defaults (generated by VimConfig.com)
"""""""""""""""""""""""""""""""""""""""

set expandtab                  " Converts tabs to spaces
set noswapfile                 " Disables swap files
set nobackup nowritebackup     " Disables backup files
set encoding=utf-8             " Read encoding
set fileencoding=utf-8         " Saving encoding
set termencoding=utf-8         " Terminal encoding
set number                     " Show line numbers
set linebreak                  " Break lines at word (requires Wrap lines)
set showbreak=+++              " Wrap-broken line prefix
set textwidth=100              " Line wrap (number of cols)
set visualbell                 " Use visual bell (no beeping)
set hlsearch                   " Highlight all search results
set smartcase                  " Enable smart-case search
set nolazyredraw               " Don't redraw while executing macros
set ignorecase                 " Always case-insensitive
set incsearch                  " Searches for strings incrementally
set autoindent                 " Auto-indent new lines
set smartindent                " Enable smart-indent
"set ruler                      " Show row and column ruler information
set undolevels=1000            " Number of undo levels
set backspace=indent,eol,start " Backspace behaviour
set magic                      " Set magic on, for regex
set mat=2                      " How many tenths of a second to blink
"set cursorline                 " Draws an horizontal line at cursor position

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Tab control
set noexpandtab " tabs ftw
set smarttab " tab respects 'tabstop', 'shiftwidth', and 'softtabstop'
set tabstop=4 " the visible width of tabs
set softtabstop=4 " edit as if the tabs are 4 characters wide
set shiftwidth=4 " number of spaces to use for indent and unindent
set shiftround " round indent to a multiple of 'shiftwidth'

" faster redrawing
set ttyfast

" code folding settings
set foldmethod=syntax " fold based on indent
set foldnestmax=10 " deepest fold is 10 levels
set nofoldenable " don't fold by default
set foldlevel=1

" make backspace behave in a sane manner
set backspace=indent,eol,start

" Switch syntax highlighting on
syntax on

" Plugins
"""""""""

" Vundle config
set nocompatible " be IMproved
filetype off     " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Vundle Plugins
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'scrooloose/nerdtree'
Plugin 'godlygeek/tabular'
Plugin 'vim-scripts/matchit.zip'
Plugin 'Raimondi/delimitMate'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'ryanoasis/vim-devicons'
Plugin 'pangloss/vim-javascript'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'altercation/vim-colors-solarized'
Plugin 'nanotech/jellybeans.vim'
Plugin 'dracula/vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'blueshirts/darcula'

call vundle#end()            " required
filetype plugin indent on    " required

" NERDTree
nmap <C-n> :NERDTreeToggle<CR>
let NERDTreeHighlightCursorline=1
let NERDTreeIgnore = ['tmp', '.yardoc', 'pkg']

" VIM Airline
set t_Co=256
set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=0

" Javascript
let g:javascript_plugin_jsdoc = 1

" Themes
""""""""
syntax enable

" Solarized config
"let g:solarized_termtrans=1
"let g:solarized_termcolors=256 "256 | 16
"set background=dark "dark|light
"colorscheme solarized

" Color scheme
colorscheme darcula

" Mappings
""""""""""

" Leader key
let mapleader=","

" Paste mode mapping
set pastetoggle=<F2>

" Moving up and down work as you would expect
nnoremap <silent> j gj
nnoremap <silent> k gk

" Open .vimrc in a new tab
nnoremap <leader>ev :vsplit $MYVIMRC<CR> 

" Reload .vimrc
nnoremap <leader>sv :source $MYVIMRC<CR> 

" Toggle cursorline
nnoremap <Leader>c :set cursorline!<CR>  

" Switch between buffers
"nnoremap <silent> <C-Left> :bp<CR>
"nnoremap <silent> <C-Right> :bn<CR>


" Switch between splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Hide higlighted matches after search
:nnoremap <silent> <CR> :nohlsearch<CR>
