#  _____            _           _ _ _       _____            __ _ _
# |  __ \          | |         | | ( )     |  __ \          / _(_) |
# | |__) |_ _ _   _| |__   __ _| | |/ ___  | |__) | __ ___ | |_ _| | ___
# |  ___/ _` | | | | '_ \ / _` | | | / __| |  ___/ '__/ _ \|  _| | |/ _ \
# | |  | (_| | |_| | |_) | (_| | | | \__ \ | |   | | | (_) | | | | |  __/
# |_|   \__,_|\__, |_.__/ \__,_|_|_| |___/ |_|   |_|  \___/|_| |_|_|\___|
#              __/ |
#             |___/
#
# Welcome to my custom zsh profile
# ---------------------------------
# Load zplug config
source ~/.zplugrc

# Zsh customizations
# -------------------

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Make colorcoding available for everyone

Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset


# new alert text
ALERT=${BWhite}${On_Red} # Bold White on red background

# mostly used alias functions

# LSD
alias ll='lsd -lh --group-dirs=first'
alias la='lsd -a --group-dirs=first'
alias l='lsd --group-dirs=first'
alias lla='lsd -lha --group-dirs=first'
alias lsl="lsd --color=always -lhFA --group-dirs=first | less"
alias ls='lsd --group-dirs=first'

# Bat
alias cat='bat --color=always'
alias catn='/usr/bin/cat'
alias catnl='bat --paging=never'
alias less='less -r'

alias cls="clear"
alias ..="cd .."
alias cd..="cd .."
#alias ls="ls -CF --color=auto"
#alias ll="ls -lisa --color=auto"
#alias lsl="ls -lhFA | less"
alias home="cd ~"
alias df="df -ahiT --total"
alias md="mkdir -pv"
alias userlist="cut -d: -f1 /etc/passwd"
alias fhere="find . -name "
alias free="free -mt"
alias ps="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"
alias wget="wget -c"
alias histg="history | grep"
alias myip="curl http://ipecho.net/plain; echo"
alias logs="find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"
alias folders='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'

# Creates an archive (*.tar.gz) from given directory.
function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }

# Create a ZIP archive of a file or folder.
function makezip() { zip -r "${1%%/}.zip" "$1" ; }

function xc {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: xc <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
 else
    if [ -f $1 ] ; then
        # NAME=${1%.*}
        # mkdir $NAME && cd $NAME
        case $1 in
          *.tar.bz2)   tar xvjf $1    ;;
          *.tar.gz)    tar xvzf $1    ;;
          *.tar.xz)    tar xvJf $1    ;;
          *.lzma)      unlzma $1      ;;
          *.bz2)       bunzip2 $1     ;;
          *.rar)       unrar x -ad $1 ;;
          *.gz)        gunzip $1      ;;
          *.tar)       tar xvf $1     ;;
          *.tbz2)      tar xvjf $1    ;;
          *.tgz)       tar xvzf $1    ;;
          *.zip)       unzip $1       ;;
          *.Z)         uncompress $1  ;;
          *.7z)        7z x $1        ;;
          *.xz)        unxz $1        ;;
          *.exe)       cabextract $1  ;;
          *)           echo "xc: '$1' - unknown archive method" ;;
        esac
    else
        echo "$1 - file does not exist"
    fi
fi
}

# jump directorys upwards until it hits a directory with multiple folders
up(){
  local d=""
  limit=$1
  for ((i=1 ; i <= limit ; i++))
    do
      d=$d/..
    done
  d=$(echo $d | sed 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
}

# create an directory and directly cd into it
mcd () {
  mkdir -p $1
  cd $1
}

# set PATH so it includes user's private bin directories
PATH="$HOME/bin:$HOME/.local/bin:$PATH"

[ -e "/etc/DIR_COLORS" ] && DIR_COLORS="/etc/DIR_COLORS"
[ -e "$HOME/.dircolors" ] && DIR_COLORS="$HOME/.dircolors"
[ -e "$DIR_COLORS" ] || DIR_COLORS=""
eval "`dircolors -b $DIR_COLORS`"

# Workaround for wsl
unsetopt BG_NICE 

# Complete aliases
setopt COMPLETE_ALIASES

# Allow empty redirections
setopt SH_NUllCMD

# 10ms for key sequences
KEYTIMEOUT=1

# history
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt EXTENDED_HISTORY
setopt HIST_REDUCE_BLANKS
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS

setopt COMPLETE_ALIASES

# make terminal command navigation sane again
bindkey -e
# Use alt <-, -> to navigate words
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line
bindkey '^[[3~' delete-char
bindkey '^?' backward-delete-char
bindkey "^A" vi-beginning-of-line

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# default to file completion
zstyle ':completion:*' completer _expand _complete _files _correct _approximate

export ZSH_PLUGINS_ALIAS_TIPS_TEXT="Alias tip: "

# Language configuration
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR=vim
export VISUAL=vim

# Dotfiles location
export DOTFILES=$HOME/dotfiles

# OS X stuff...
if [[ $OSTYPE =~ ^darwin ]]; then
	# Sets a terminal supporting italics (needs terminfo)
	export TERM=xterm-256color-italic

	# Add Homebrew GNU binaries to the path
	BREW_LOCAL_PATH="/usr/local/opt"
	export PATH="/usr/local/bin:$BREW_LOCAL_PATH/coreutils/libexec/gnubin:$BREW_LOCAL_PATH/findutils/libexec/gnubin:$BREW_LOCAL_PATH/gnu-tar/libexec/gnubin:$BREW_LOCAL_PATH/gnu-sed/libexec/gnubin:$BREW_LOCAL_PATH/curl/bin:$PATH"
	export MANPATH="/usr/local/share/man:$BREW_LOCAL_PATH/coreutils/libexec/gnuman:$BREW_LOCAL_PATH/findutils/libexec/gnuman:$BREW_LOCAL_PATH/gnu-tar/libexec/gnuman:$BREW_LOCAL_PATH/gnu-sed/libexec/gnuman:$MANPATH"
fi

# Configure list colors
if [ "$TERM" != "dumb" ]; then
  export LS_OPTIONS='--color=auto' 
  eval `dircolors ~/.dir_colors_db/dircolors.ansi-dark` 
fi

# Aliases
# -------

#alias ls='ls $LS_OPTIONS'
#alias ssh='TERM=xterm-256color ssh'
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"
alias ccat="pygmentize -O style=monokai -f console256 -g"
alias ssh='TERM=xterm256-color ssh'

# Applications configuration
# --------------------------

# SDKMAN Configuration
export SDKMAN_DIR="/usr/local/sdkman"
[[ -s "/usr/local/sdkman/bin/sdkman-init.sh" ]] && source "/usr/local/sdkman/bin/sdkman-init.sh"

# Fuzzy finder configuration (FZF)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

HAS_RG=$(command -v rg) 
if [ -n "$HAS_RG" ]; then
  export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
else
  HAS_AG=$(command -v ag)
  [ -n "$HAS_AG" ] && export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git --ignore node_modules -g ""'
fi
[ -n "$FZF_DEFAULT_COMMAND" ] && export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Load local config
[ -f ~/.zshrc.local ] && source ~/.zshrc.local
